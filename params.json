{"name":"Shortbus","tagline":"ShortBus is a tiny JavaScript event bus","body":"ShortBus\r\n========\r\n\r\n`ShortBus` is a dead simple javascript event bus. Weighing in at about 1kb it's a very lightweight event system library. The uncompressed and commented library can be found [here](https://raw.github.com/daytonn/shortbus/master/src/shortbus.js).\r\n\r\nInstallation\r\n------------\r\nSimply [download](https://raw.github.com/daytonn/shortbus/master/lib/shortbus.js) the script and put it in your javascript application however you prefer.\r\n\r\n\r\nUsage\r\n-----\r\n`ShortBus` allows you to attach, trigger and detach event handlers to arbitrary events.\r\n\r\n\r\n### Overview\r\n\r\n```js\r\nShortBus.on(\"eventName\", eventHandler, this);\r\nShortBus.trigger(\"eventName\");\r\nShortBus.off(\"eventName\", eventHandler);\r\n```\r\n\r\n### namespace\r\n\r\nThe namespace method allows you to change the `ShortBus` namespace to anything you like. `namespace` has a few simple forms in order to accomodate any desired namespace. After the namespace is created, the default global `ShortBus` namespace will be removed. To simply change the `ShortBus` global namespace simply pass the alias as a string:\r\n\r\n```js\r\nShortBus.namespace(\"Dispatcher\");\r\nDispatcher.on(\"eventName\", eventHandler, context);\r\nShortBus === undefined; // true\r\n```\r\n\r\nTo attach `ShortBus` to an existing namespace, simply pass the namespace object as the first argument:\r\n\r\n```js\r\nvar App = {};\r\nShortBus.namespace(App);\r\nApp.ShortBus.on(\"eventName\", eventHandler, context);\r\nShortBus === undefined; // true\r\n```\r\n\r\nTo attach `ShortBus` to an existing namespace with an alias, pass the namespace object and then the desired alias:\r\n\r\n```js\r\nvar App = {};\r\nShortBus.namespace(App, \"Dispatcher\");\r\nApp.Dispatcher.on(\"eventName\", eventHandler, context);\r\nShortBus === undefined; // true\r\n```\r\n\r\n### on\r\n\r\nThe on method allows you to attach an event handler to a given event:\r\n\r\n```js\r\nShortBus.on(\"eventName\", eventHandler);\r\n```\r\n\r\nTo pass a context for your event handler to execute in, pass it as the third argument:\r\n\r\n```js\r\nShortBus.on(\"eventName\", eventHandler, context);\r\n```\r\n\r\n### off\r\n\r\nThe off method allows you to remove a single event handler or all event handlers for a given event. To remove a single event handler, pass the event name and the specific handler to be removed:\r\n\r\n```js\r\nShortBus.off(\"eventName\", eventHandler);\r\n```\r\n\r\nTo remove all events attached to a given event, pass only the event name:\r\n\r\n```js\r\nShortBus.off(\"eventName\");\r\n```\r\n\r\n### trigger\r\n\r\nThe trigger method allows you to trigger a method and call every handler attached to the given event:\r\n\r\n```js\r\nShortBus.trigger(\"eventName\");\r\n```\r\n\r\nTo pass data to the event handlers simply pass additional arguments to the trigger method:\r\n\r\n```js\r\nShortBus.trigger(\"eventName\", \"hello\", \"world\");\r\n```\r\n\r\n\r\n\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}